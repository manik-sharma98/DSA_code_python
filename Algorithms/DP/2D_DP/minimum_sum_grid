def min_sum(i,j,grid):
    if i == 0 and j == 0:
        return grid[0][0]
    if i < 0 or j < 0:
        return int(1e9)
    up = grid[i][j] + min_sum(i-1,j,grid)
    left = grid[i][j] + min_sum(i,j-1,grid)
    return min(up,left)

matrix = [[5, 9, 6],[11, 5, 2]]
n = len(matrix)
m = len(matrix[0])
print(min_sum(n-1,m-1,matrix))

def min_sum_t(grid):
    r = len(grid)
    c = len(grid[0])
    for i in range(1,r):
        grid[i][0] += grid[i-1][0]
    for j in range(1,c):
        grid[0][j] += grid[0][j-1]
    for i in range(1,r):
        for j in range(1,c):
            grid[i][j] += min(grid[i][j-1],grid[i-1][j])
    return grid[-1][-1]
matrix = [[5, 9, 6],[11, 5, 2]]
n = len(matrix)
m = len(matrix[0])
print(min_sum_t(matrix))

